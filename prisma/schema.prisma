// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Agent {
  id      String @id @default(uuid())
  name    String
  phone   String
  address String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  investor   Investor @relation(fields: [investorId], references: [id], onDelete: Cascade)
  investorId String
}

model Investor {
  id      String  @id @default(uuid())
  name    String
  email   String  @unique
  code    Int     @unique @default(autoincrement())
  phone   String
  address String
  bank    Json[]
  agent   Agent[]

  balance Float @default(0.0)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  user      User   @relation("updatedBy", fields: [updatedBy], references: [id])
  updatedBy String

  investments Investment[]
}

enum InvestmentType {
  BONDS
  CERTIFICATES
}

model Investment {
  id String @id @default(uuid())

  type            InvestmentType
  amount          Float          @default(0.0)
  interestRate    Float          @default(1.0)
  createdAt       DateTime       @default(now())
  redemptionDate  DateTime
  redeemed        Boolean?        @default(false)
  bank            Json
  valueOnMaturity Float          @default(0.0)
  customId        String?        @unique

  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  investor   Investor @relation(fields: [investorId], references: [id], onDelete: Cascade)
  investorId String

  createdBy   User   @relation(fields: [createdById], references: [id] )
  createdById String
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Investment Investment[]
  Investor   Investor[]   @relation("updatedBy")
}

model Docs {
  id String @id @default(uuid())

  name      String
  url       String
  thumbnail String?
  type      String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}
